/**
 * vue-unique-id v2.0.0
 * (c) 2019 Bertrand Guay-Paquet
 * @license ISC
 */
(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
  typeof define === 'function' && define.amd ? define(factory) :
  (global = global || self, global.VueUniqueId = factory());
}(this, function () { 'use strict';

  var methods = {
    /**
     * Generate a component-scoped unique HTML identifier.
     *
     * Example: $id('my-id') => 'uid-42-my-id'
     *
     * @param {string} id id to scope
     */
    $id: function $id(id) {
      if ( id === void 0 ) id = '';

      return ((this.uid) + "-" + id);
    },

    /**
     * Generate a component-scoped unique HTML identifier reference. Prepends '#' to the id generated
     * by the call $id(id).
     *
     * Example: $idRef('my-id') => '#uid-42-my-id'
     *
     * @param {string} id id to scope
     */
    $idRef: function $idRef(id) {
      return ("#" + (this.$id(id)));
    },
  };

  function install(Vue) {
    // Assign a unique id to each component
    var uidCounter = 0;
    Vue.mixin({
      beforeCreate: function beforeCreate() {
        uidCounter += 1;
        var uid = "uid-" + uidCounter;
        Object.defineProperties(this, {
          uid: { get: function get() { return uid; } },
        });
      },
    });

    Object.assign(Vue.prototype, methods);
  }

  return install;

}));
